
#include "jsonc.h"
#include <stdio.h>
#include <stdlib.h>
#include<string.h>

static  json_return  *GetValByKey(json_object * jobj, const  char  *sname)
{
	json_return *back = (json_return *)malloc(sizeof(json_return));
    json_object     *pval = NULL;
    enum json_type type;
    pval = json_object_object_get(jobj, sname);
    if(NULL!=pval){
        type = json_object_get_type(pval);
		switch (type) {
		case json_type_string:
			//printf("Key:%s  value: %s\n", sname, json_object_get_string(pval));
		{
			back->type = CHARER;
			const char *res = json_object_get_string(pval);
			back->rs.rs_c = (char *) malloc(strlen(res) + 1);
			strcpy(back->rs.rs_c, res);

			break;
		}
		case json_type_int:
			//printf("Key:%s  value: %d\n", sname, json_object_get_int(pval));
			back->type = CHARER;
			back->rs.rs_i = json_object_get_int(pval);
			break;
		default:
			break;
		}
    }
    return back;
}

void dele_json_back(json_object *pobj)
{
     if(pobj->tpye == )
     {

     }else
     {

     }
}


void get_val(char *name) {
	json_object *pobj = NULL;
	pobj = json_object_from_file("./conf.json");
	json_return *back;
	back = GetValByKey(pobj, name);
	dele_json_back(back);

	/*
	json_object_object_del(pobj, "foo");
	json_object_object_add(pobj, "foo", json_object_new_string("fark"));
	json_object_object_add(pobj, "Age", json_object_new_int(200));
	GetValByKey(pobj, "Age");
	*/
	json_object_to_file("./conf.json", pobj);

	json_object_put(pobj);
}
